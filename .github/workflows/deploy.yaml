name: Build and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  detect-and-build:
    runs-on: ubuntu-latest
    outputs:
      affected-apps: ${{ steps.affected.outputs.apps }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        id: set-shas
        uses: nrwl/nx-set-shas@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Debug SHAs
        run: |
          echo "Base SHA: ${{ steps.set-shas.outputs.base }}"
          echo "Head SHA: ${{ steps.set-shas.outputs.head }}"
          echo "Event name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          git log --oneline -10

      - name: Get affected apps
        id: affected
        run: |
          echo "Running: npx nx show projects --affected --type=app --base=${{ steps.set-shas.outputs.base }} --head=${{ steps.set-shas.outputs.head }}"
          AFFECTED=$(npx nx show projects --affected --type=app --base=${{ steps.set-shas.outputs.base }} --head=${{ steps.set-shas.outputs.head }} | tr '\n' ' ' | xargs)
          echo "apps=$AFFECTED" >> $GITHUB_OUTPUT
          echo "Affected apps: '$AFFECTED'"
          if [ -z "$AFFECTED" ]; then
            echo "WARNING: No affected apps detected!"
          fi

      - name: Build affected apps
        if: steps.affected.outputs.apps != ''
        run: npx nx affected -t build --base=${{ steps.set-shas.outputs.base }} --head=${{ steps.set-shas.outputs.head }}

  docker-build-push:
    needs: detect-and-build
    if: needs.detect-and-build.outputs.affected-apps != ''
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [compare, regression]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Debug affected apps
        run: |
          echo "Received affected apps: '${{ needs.detect-and-build.outputs.affected-apps }}'"
          echo "Current matrix app: '${{ matrix.app }}'"

      - name: Check if app is affected
        id: check
        run: |
          if echo "${{ needs.detect-and-build.outputs.affected-apps }}" | grep -q "${{ matrix.app }}"; then
            echo "affected=true" >> $GITHUB_OUTPUT
            echo "App ${{ matrix.app }} is affected"
          else
            echo "affected=false" >> $GITHUB_OUTPUT
            echo "App ${{ matrix.app }} is NOT affected"
          fi

      - name: Setup Node
        if: steps.check.outputs.affected == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        if: steps.check.outputs.affected == 'true'
        run: npm ci

      - name: Build app
        if: steps.check.outputs.affected == 'true'
        run: npx nx build ${{ matrix.app }} --configuration=production

      - name: Set up Docker Buildx
        if: steps.check.outputs.affected == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        if: steps.check.outputs.affected == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        if: steps.check.outputs.affected == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: apps/${{ matrix.app }}/Dockerfile
          push: true
          tags: |
            ghcr.io/patricklarocque/${{ matrix.app }}:${{ github.sha }}
            ghcr.io/patricklarocque/${{ matrix.app }}:latest

      - name: Update k8s manifest
        if: steps.check.outputs.affected == 'true'
        run: |
          sed -i "s|image: ghcr.io/patricklarocque/${{ matrix.app }}:.*|image: ghcr.io/patricklarocque/${{ matrix.app }}:${{ github.sha }}|" k8s/${{ matrix.app }}/deployment.yaml

      - name: Commit manifest changes
        if: steps.check.outputs.affected == 'true'
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add k8s/${{ matrix.app }}/deployment.yaml
          git commit -m "Update ${{ matrix.app }} image to ${{ github.sha }}" || exit 0
          git push
