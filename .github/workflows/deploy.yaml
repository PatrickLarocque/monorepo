name: Build and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  detect-affected:
    runs-on: ubuntu-latest
    outputs:
      affected-apps: ${{ steps.affected.outputs.apps }}
      has-affected: ${{ steps.affected.outputs.has-affected }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head
        id: set-shas
        uses: nrwl/nx-set-shas@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Debug - Show SHAs and recent commits
        run: |
          echo "Base SHA: ${{ steps.set-shas.outputs.base }}"
          echo "Head SHA: ${{ steps.set-shas.outputs.head }}"
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo ""
          echo "Recent commits:"
          git log --oneline -10
          echo ""
          echo "Changed files:"
          git diff --name-only ${{ steps.set-shas.outputs.base }}...${{ steps.set-shas.outputs.head }}

      - name: Detect affected apps
        id: affected
        run: |
          echo "Running: npx nx show projects --affected --type=app --base=${{ steps.set-shas.outputs.base }} --head=${{ steps.set-shas.outputs.head }}"
          AFFECTED=$(npx nx show projects --affected --type=app --base=${{ steps.set-shas.outputs.base }} --head=${{ steps.set-shas.outputs.head }} | tr '\n' ',' | sed 's/,$//')
          echo "apps=$AFFECTED" >> $GITHUB_OUTPUT

          if [ -z "$AFFECTED" ]; then
            echo "has-affected=false" >> $GITHUB_OUTPUT
            echo "No affected apps detected"
          else
            echo "has-affected=true" >> $GITHUB_OUTPUT
            echo "Affected apps: $AFFECTED"
          fi

  build-and-push:
    needs: detect-affected
    if: needs.detect-affected.outputs.has-affected == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    strategy:
      matrix:
        app: [compare, regression]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase repository owner
        id: repo
        run: |
          echo "owner=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Check if app is affected
        id: check
        run: |
          AFFECTED="${{ needs.detect-affected.outputs.affected-apps }}"
          echo "Checking if ${{ matrix.app }} is in: $AFFECTED"

          if echo "$AFFECTED" | grep -q "${{ matrix.app }}"; then
            echo "affected=true" >> $GITHUB_OUTPUT
            echo "✓ App ${{ matrix.app }} is affected - will build and deploy"
          else
            echo "affected=false" >> $GITHUB_OUTPUT
            echo "✗ App ${{ matrix.app }} is not affected - skipping"
          fi

      - name: Set up Docker Buildx
        if: steps.check.outputs.affected == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: steps.check.outputs.affected == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        if: steps.check.outputs.affected == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: apps/${{ matrix.app }}/Dockerfile
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: |
            ghcr.io/${{ steps.repo.outputs.owner }}/${{ matrix.app }}:${{ github.sha }}
            ghcr.io/${{ steps.repo.outputs.owner }}/${{ matrix.app }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update Kubernetes manifest
        if: steps.check.outputs.affected == 'true' && github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          sed -i "s|image: ghcr.io/${{ steps.repo.outputs.owner }}/${{ matrix.app }}:.*|image: ghcr.io/${{ steps.repo.outputs.owner }}/${{ matrix.app }}:${{ github.sha }}|" k8s/${{ matrix.app }}/deployment.yaml

          if git diff --quiet k8s/${{ matrix.app }}/deployment.yaml; then
            echo "No changes to manifest"
          else
            echo "Manifest updated with new image tag"
            git diff k8s/${{ matrix.app }}/deployment.yaml
          fi

      - name: Commit and push manifest changes
        if: steps.check.outputs.affected == 'true' && github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add k8s/${{ matrix.app }}/deployment.yaml

          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore: update ${{ matrix.app }} image to ${{ github.sha }} [skip ci]"
            git pull --rebase origin main
            git push origin main
          fi
